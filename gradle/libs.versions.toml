[versions]
agp = "8.5.2"
kotlin = "2.1.0"
compileSdk-version = "35"
minSdk-version = "26"
targetSdk-version = "35"
code-version = "801"
name-version = "8.0.1"
compose-version = "1.5.14"

#Android.
core-ktx = "1.15.0"
junit = "4.13.2"
androidx-test-ext-junit = "1.2.1"
espresso-core = "3.6.1"
lifecycle = "2.8.7"
constraintlayout = "2.2.0"
glance = "1.1.1"
security = "1.0.0"
workmanager = "2.10.0"
biometric = "1.2.0-alpha05"

#Compose.
activity-compose = "1.10.1"
compose-bom = "2025.03.00"
appcompat = "1.7.0"
material = "1.12.0"
compose-constraintlayout = "1.1.1"
foundation = "1.7.8"
ui = "1.7.8"

#Plugins.
ksp = "2.0.21-1.0.25"
dependencyanalysis = "2.0.1"

#KotlinX.
serialization = "1.7.1"
coroutines = "1.9.0"

#Koin.
koin-core = "3.5.6"
koin-compose = "3.5.6"
koin-android = "3.5.6"
koin-worker = "3.5.6"
koin-test = "3.5.6"
koin-gradle = "3.5.0"

#Room.
room = "2.6.1"

#Datastore.
datastore = "1.0.0"
datastore-security = "1.0.0"

#Exo.
exoplayer = "2.19.1"

#CameraX.
camerax = "1.3.1"

#Coil
coil-compose = "2.7.0"
coil-svg = "2.6.0"
coil-gif = "2.7.0"
zoomable-coil = "0.13.0"

#License.
license = "11.1.4"

#Voyager.
voyager = "1.0.0"

#AI.
generativeai = "0.9.0"

#Others.
sketchbook = "1.0.4"
#swipe = "1.1.1"
global-exception = "1.0.1"
url-preview = "1.0.1"
beetle = "2.0.1"
sqlcipher = "4.5.4"
#waveslider = "0.0.3"
#audiowaveform = "1.1.2"
amplituda = "2.2.2"
#android-startup = "1.1.0"
enigma = "1.0.0.8"
media3 = "1.5.1"
balloon-compose = "1.6.7"
cloudy = "0.2.3"
markdown-version = "0.5.4"
ktorClientAndroid = "2.3.4"
metaprobeKmp = "1.0.1"

[libraries]
#Kotlin.
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

#Android.
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-process = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "lifecycle" }
lifecycle-livedata = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
glance = { module = "androidx.glance:glance-appwidget", version.ref = "glance" }
security = { module = "androidx.security:security-crypto", version.ref = "security" }
workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
#startup = { module = "androidx.startup:startup-runtime", version.ref = "startup" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
androidx-biometric = { group = "androidx.biometric", name = "biometric-ktx", version.ref = "biometric" }

#Compose.
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "ui" }
ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
material3 = { group = "androidx.compose.material3", name = "material3" }
compose-material = { group = "androidx.compose.material", name = "material" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
#compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraintlayout" }
lifecycle-compose-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "foundation" }
lifecycle-compose-runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }

#Koin.
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin-core" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin-android" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-compose" }
koin-worker = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin-worker" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin-test" }
koin-gradle-plugin = { module = "io.insert-koin:koin-gradle-plugin", version.ref = "koin-gradle" }

#Room.
roomkts = { module = "androidx.room:room-ktx", version.ref = "room" }
room_runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room_compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

#DataStore.
datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore-security = { module = "io.github.osipxd:security-crypto-datastore-preferences", version.ref = "datastore-security" }

#Exo.
exoplayer-core = { module = "com.google.android.exoplayer:exoplayer-core", version.ref = "exoplayer" }
exoplayer-ui = { module = "com.google.android.exoplayer:exoplayer-ui", version.ref = "exoplayer" }
exoplayer-extension = { module = "com.google.android.exoplayer:extension-mediasession", version.ref = "exoplayer" }

#CameraX.
camerax-core = { module = "androidx.camera:camera-core", version.ref = "camerax" }
camerax-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camerax" }
camerax-view = { module = "androidx.camera:camera-view", version.ref = "camerax" }
camerax-extensions = { module = "androidx.camera:camera-extensions", version.ref = "camerax" }

#Coil.
coil_compose = { module = "io.coil-kt:coil-compose", version.ref = "coil-compose" }
coil_svg = { module = "io.coil-kt:coil-svg", version.ref = "coil-svg" }
coil_gif = { module = "io.coil-kt:coil-gif", version.ref = "coil-gif" }
zoomable-coil = { module = "me.saket.telephoto:zoomable-image-coil", version.ref = "zoomable-coil" }


#License.
licenses = { module = "com.mikepenz:aboutlibraries-compose", version.ref = "license" }

#Voyager.
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-screenModel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
voyager-bottom-sheet = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }

#Medaia3.
media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3" }
media3-session = { group = "androidx.media3", name = "media3-session", version.ref = "media3" }
media3-ui = { group = "androidx.media3", name = "media3-ui", version.ref = "media3" }

#AI.
generativeai = { group = "com.google.ai.client.generativeai", name = "generativeai", version.ref = "generativeai" }

#Others.
#url_preview = { module = "tw.com.oneup.www:Baha-UrlPreview", version.ref = "url-preview" }
beetle = { module = "com.karacca:beetle", version.ref = "beetle" }
#swipe = { module = "me.saket.swipe:swipe", version.ref = "swipe" }
#globalexception = { module = "com.github.emirhankolver:GlobalExceptionHandler", version.ref = "global-exception" }
sketchbook = { module = "io.getstream:sketchbook", version.ref = "sketchbook" }
sqlcipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "sqlcipher" }
#waveslider = { module = "com.github.galaxygoldfish:waveslider", version.ref = "waveslider" }
#audiowaveform = { module = "com.github.lincollincol:compose-audiowaveform", version.ref = "audiowaveform" }
amplituda = { module = "com.github.lincollincol:amplituda", version.ref = "amplituda" }
#android-startup = { module = "io.github.idisfkj:android-startup", version.ref = "android-startup" }
enigma = { module = "gradle.plugin.chrisney:enigma", version.ref = "enigma" }
balloon-compose = { module = "com.github.skydoves:balloon-compose", version.ref = "balloon-compose" }
compose-cloudy = { module = "com.github.skydoves:cloudy", version.ref = "cloudy" }
markdown = { module = "com.github.jeziellago:compose-markdown", version.ref = "markdown-version" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientAndroid" }
metaprobe-kmp = { module = "tech.dev-scion:metaprobe-kmp", version.ref = "metaprobeKmp" }

[bundles]
compose = ["ui", "ui-tooling-preview", "material3"]
composeTest = ["ui-test-junit4", "ui-test-manifest"]

[plugins]
#kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
dependencyanalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyanalysis" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
licenses = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "license" }
enigma = { id = "com.chrisney.enigma", version.ref = "enigma" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

#Local.
cityzouitel-androidLibrary = { id = "city.zouitel.android.library", version = "unspecified" }
cityzouitel-androidCompose = { id = "city.zouitel.android.compose", version = "unspecified" }
cityzouitel-androidApplication = { id = "city.zouitel.android.application", version = "unspecified" }
cityzouitel-composeVoyager = { id = "city.zouitel.compose.voyager", version = "unspecified" }
