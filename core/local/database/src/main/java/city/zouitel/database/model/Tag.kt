package city.zouitel.database.model

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey
import city.zouitel.database.model.Tag.Companion.TABLE_NAME
import city.zouitel.database.utils.Constants.COLOR
import city.zouitel.database.utils.Constants.DEFAULT_NUM
import city.zouitel.database.utils.Constants.DEFAULT_TXT
import city.zouitel.database.utils.Constants.ID
import city.zouitel.database.utils.Constants.LABEL

/**
 * Represents a Tag entity for the application.
 *
 * This data class is mapped to a database table named [TABLE_NAME] using Room persistence library.
 * Each tag has a unique ID, a user-defined label, and a color for visual representation.
 *
 * @property id The unique identifier for the tag. This is auto-generated by the database.
 * @property label The user-defined text label for the tag.
 * @property color An integer representing the color associated with the tag.
 */
@Entity(tableName = TABLE_NAME)
data class Tag(
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = ID, defaultValue = DEFAULT_NUM) val id: Long,
    @ColumnInfo(name = LABEL, defaultValue = DEFAULT_TXT) val label: String,
    @ColumnInfo(name = COLOR, defaultValue = DEFAULT_NUM) val color: Int
) {
    companion object {
        const val TABLE_NAME = "tags_table"
    }
}